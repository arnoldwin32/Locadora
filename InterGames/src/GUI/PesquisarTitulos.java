/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.Conexao;
import DAO.DAOTitulos;
import MODEL.Locadora;
import MODEL.Titulos;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALUNO
 */

public class PesquisarTitulos extends javax.swing.JPanel {

    /**
     * Creates new form PesquisarTitulos
     */
    public static dialogo diag;
    Conexao con = new Conexao();
    DAOTitulos dao = new DAOTitulos();
    Locadora loc = new Locadora();
    public PesquisarTitulos(Conexao conect) {
        super();
        con = conect;
        initComponents();
        //input.setVisible(false);
       
    }
    public void mostrarDialogo(){
        diag = new dialogo(this, true);
        diag.setVisible(true);
    }
    private void preenchertabela(String sql)
    {
        dao.executeSQL(sql);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
       /* jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(120);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);*/
        
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);
        try{
            while(dao.resultado.next()){
                
                modelo.addRow(new Object[] {dao.resultado.getString("codigo"),dao.resultado.getString("nome"),dao.resultado.getString("ano"),dao.resultado.getString("genero"),dao.resultado.getString("midia"),dao.resultado.getString("atores"),dao.resultado.getString("audio"),dao.resultado.getString("legendas"),dao.resultado.getString("classificacao")});
                
            }
        }catch(SQLException ex){
            System.out.println("Erro"+ex.getMessage());
        }
    }
    
    public void preencheMidia()
    {
        
        opcsec.addItem("DVD");
        opcsec.addItem("Blue ray");
        opcsec.addItem("DVD e Blue ray");
        
      }
    public void removerMidia()
    {
        opcsec.removeItem("DVD");
        opcsec.removeItem("Blue ray");
        opcsec.removeItem("DVD e Blue ray");
    }
    
            
    private void pesquisar()
    {
         if(opc.getSelectedItem().toString().equals("Todos"))
        {
        preenchertabela("Select codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao from db_locadora.tb_titulos");
        } 
        else if(opc.getSelectedItem().toString().equals("Ano"))
        {
            preenchertabela("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where ano = '"+input.getText()+"'");
            System.out.println("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where ano = '"+input.getText()+"'");
        }
        else if(opc.getSelectedItem().toString().equals("Mídia"))
        {   
            preenchertabela("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where midia = '"+input.getText()+"'");
            System.out.println("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where midia = '"+input.getText()+"'");
        }
        else if(opc.getSelectedItem().toString().equals("Nome"))
        {   
            preenchertabela("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where nome like '%"+input.getText()+"%'");
            System.out.println("SELECT codigo,nome,ano,genero,midia,atores,audio,legendas,classificacao FROM db_locadora.tb_titulos where nome like '%"+input.getText()+"%'");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        opc = new javax.swing.JComboBox();
        opcsec = new javax.swing.JComboBox();
        procurar = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        exibir = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "codigo", "nome", "ano", "genero", "midia", "atores", "audio", "legendas", "classificacao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(50);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        jTable1.getColumnModel().getColumn(1).setMinWidth(300);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(300);
        jTable1.getColumnModel().getColumn(2).setMinWidth(40);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(3).setMinWidth(70);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(180);

        opc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Todos", "Código", "Nome", "Ano", "Atores", "Genero", "Calssificação", "Audio", "Legendas", "Mídia", "Classificação" }));
        opc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                opcItemStateChanged(evt);
            }
        });
        opc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcActionPerformed(evt);
            }
        });
        opc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opcFocusGained(evt);
            }
        });

        opcsec.setBorder(null);
        opcsec.setEnabled(false);
        opcsec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcsecActionPerformed(evt);
            }
        });

        procurar.setText("Pesquisar");
        procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurarActionPerformed(evt);
            }
        });

        input.setForeground(new java.awt.Color(153, 153, 153));
        input.setText("Digite sua busca e clique em Pesquisar");
        input.setAutoscrolls(false);
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        input.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputKeyPressed(evt);
            }
        });

        exibir.setText("exibir");
        exibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exibirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(opc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(opcsec, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(procurar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exibir)))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opcsec, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(procurar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exibir))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void procurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurarActionPerformed
       pesquisar();
    }//GEN-LAST:event_procurarActionPerformed

    private void opcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcActionPerformed
      /* String valor = opc.getSelectedItem().toString();
       if(valor.equals("Selecione"))
       {
           opcsec.removeAll();
           opcsec.setEnabled(false);
           input.setEnabled(false);
           procurar.setEnabled(false);
           
       }
      else if(valor.equals("Mídia")){
           opcsec.setEnabled(true);
            preencheMidia();
           // opcsec.remove();
       }
       else if(valor.equals("Todos"))
       {
           opcsec.removeAll();
           opcsec.setEnabled(false);
           input.setEnabled(false);
           input.setText("Clique em pesquisar para listar tudo");
       }*/
                
    }//GEN-LAST:event_opcActionPerformed

    private void opcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_opcItemStateChanged
           //input.setEnabled(true);
    }//GEN-LAST:event_opcItemStateChanged

    private void inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusGained
        if(input.getText().equals("Digite sua busca e clique em Pesquisar"))
        {
            input.setText("");
            input.setForeground(Color.black);
        }
    }//GEN-LAST:event_inputFocusGained

    private void inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusLost
        if(input.getText().equals(""))
        {
            input.setText("Digite sua busca e clique em Pesquisar");
            input.setForeground(Color.gray);
        }
    }//GEN-LAST:event_inputFocusLost

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed
        
    }//GEN-LAST:event_inputKeyPressed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
       pesquisar();
    }//GEN-LAST:event_inputActionPerformed

    private void opcFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opcFocusGained
       opcsec.setEnabled(false);
    }//GEN-LAST:event_opcFocusGained

    private void exibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exibirActionPerformed
        mostrarDialogo();
     
    }//GEN-LAST:event_exibirActionPerformed

    private void opcsecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcsecActionPerformed
       if(opcsec.getSelectedItem().toString().equals("DVD")){
           input.setText("Opção selecionada: DVD , clique em em PESQUISAR");
            //pesquisar();
           input.setEnabled(false);
        }
    }//GEN-LAST:event_opcsecActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exibir;
    private javax.swing.JTextField input;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox opc;
    private javax.swing.JComboBox opcsec;
    private javax.swing.JButton procurar;
    // End of variables declaration//GEN-END:variables
}
